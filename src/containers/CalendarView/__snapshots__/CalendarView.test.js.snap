// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CalendarView should render a snapshot with correct data passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CalendarView />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Logo />,
        <Calendar
          maxDetail="month"
          minDetail="century"
          onChange={[Function]}
          returnValue="start"
          showNavigation={true}
          showNeighboringMonth={true}
          view="month"
        />,
        <Link
          replace={false}
          to="/affirmations"
        >
          <button
            className="standard-btn light affirmations-btn"
          >
            your affirmations
          </button>
        </Link>,
      ],
      "className": "calendar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "maxDetail": "month",
          "minDetail": "century",
          "onChange": [Function],
          "returnValue": "start",
          "showNavigation": true,
          "showNeighboringMonth": true,
          "value": undefined,
          "view": "month",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <button
            className="standard-btn light affirmations-btn"
          >
            your affirmations
          </button>,
          "replace": false,
          "to": "/affirmations",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "your affirmations",
            "className": "standard-btn light affirmations-btn",
          },
          "ref": null,
          "rendered": "your affirmations",
          "type": "button",
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Logo />,
          <Calendar
            maxDetail="month"
            minDetail="century"
            onChange={[Function]}
            returnValue="start"
            showNavigation={true}
            showNeighboringMonth={true}
            view="month"
          />,
          <Link
            replace={false}
            to="/affirmations"
          >
            <button
              className="standard-btn light affirmations-btn"
            >
              your affirmations
            </button>
          </Link>,
        ],
        "className": "calendar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "maxDetail": "month",
            "minDetail": "century",
            "onChange": [Function],
            "returnValue": "start",
            "showNavigation": true,
            "showNeighboringMonth": true,
            "value": undefined,
            "view": "month",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="standard-btn light affirmations-btn"
            >
              your affirmations
            </button>,
            "replace": false,
            "to": "/affirmations",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "your affirmations",
              "className": "standard-btn light affirmations-btn",
            },
            "ref": null,
            "rendered": "your affirmations",
            "type": "button",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
